stages:
  - lint
  - build
  - test
  - package
  - deploy

lint-front:
  image: node:14
  stage: lint
  script:
    - echo "I'm linting your angular code" 
    - cd webapp && npm install eslint --save-dev
    - npx eslint "**/*.ts"
    
lint-back:
  image: golang:1.10
  stage: lint
  script:
    - echo "I'm linting your go code"
    - cd server && export GOPATH=`pwd` 
    - echo $GOPATH
    - go get -u golang.org/x/lint/golint
    - ls 
    - ./bin/golint *.go

build-front:
  image: node:14
  stage: build
  script:
    - echo "Hello, i'm building your front-end"
    - cd ./webapp
    - npm install
    - npm install -g @angular/cli
    - npm run build
    - ls

build-back:
  image: golang:1.10
  stage: build
  script:
    - echo "Hello, i'm building your back-end"
    - cd server && go build *.go
    - ls

test-front:
  stage: test
  script:
    - echo "I'm testing your front"
    - cd ./webapp
    - npm install
    - npm install -g @angular/cli
    - ng test

test-back:
  image: golang:1.10
  stage: test
  script:
    - echo "I'm testing your back"
    - cd server && export GOPATH=`pwd` 
    - go test

package-job:
  stage: package
  script:
    - echo "I'm packaging your code"

deploy-job:
  stage: deploy
  script:
    - echo "I'm deploying your code"