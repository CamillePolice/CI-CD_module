stages:
  - lint
  - build
  - test
  - package
  - deploy

lint-front:
  image: node:15.12.0-alpine3.10
  stage: lint
  script:
    - echo "I'm linting your angular code"
    - ls
    - cd webapp
    - npm install
    - npm install eslint --save-dev
    - npm i npx
    - npx eslint "**/*.ts"

lint-back:
  image: golang:1.10
  stage: lint
  script:
    - echo "I'm linting your go code"
    - cd server
    - export GOPATH=`pwd`
    - echo $GOPATH
    - go get -u golang.org/x/lint/golint
    - ./bin/golint files/main.go

build-front:
  image: node:15.12.0-alpine3.10
  stage: build
  script:
    - echo "Hello, i'm building your front-end"
    - cd ./webapp
    - npm install
    - npm install @angular/cli
    - npm run build
    - ls

build-back:
  image: golang:1.10
  stage: build
  script:
    - echo "Hello, i'm building your back-end"
    - cd server/files
    - go build main.go
    - ls

test-front:
  image: node:15.12.0-alpine3.10
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your front"
    - cd ./webapp
    - npm install
    - npm install @angular/cli
    - npm run test

test-back:
  image: golang:1.10
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your back"
    - cd server/files
    - go test