stages:
  - lint
  - build
  - test
  - package
  - deploy

lint-front:
  stage: lint
  script:
    - echo "I'm linting your angular code" 
    - cd webapp
    - npm install eslint --save-dev
    - npx eslint "**/*.ts"
    
lint-back:
  stage: lint
  script:
    - echo "I'm linting your go code"
    - cd server
    - $Env:GOPATH = pwd
    - echo $env:GOPATH
    - go get -u golang.org/x/lint/golint
    - ls
    - ./bin/golint *.go

build-front:
  stage: build
  script:
    - echo "Hello, i'm building your front-end"
    - cd ./webapp
    - npm install
    - npm install @angular/cli
    - ls
    - npm run build
    - Remove-Item "C:\inetpub\wwwroot" -Recurse
    - Copy-Item -Path "dist" -Destination "C:\inetpub\wwwroot" -Recurse

build-back:
  stage: build
  script:
    - echo "Hello, i'm building your back-end"
    - cd server 
    - go build *.go

test-front:
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your front"
    - cd ./webapp
    - ls
    - node_modules/@angular/cli/bin/ng test

test-back:
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your back"
    - cd server
    - go test

package-job:
  stage: package
  script:
    - echo "I'm packaging your code to the staging environment"
    - cd webapp
    - npm run start
    - cd ..
    - cd server
    - ./main
  only:
    - master

deploy-job:
  stage: deploy
  script:
    - echo "I'm deploying your code to the production environment"
    - cd webapp
    - npm install http-server -g
    - http-server dist/webapp
  only:
    - tags