stages:
  - package
  - build
  - lint
  - test
  - deploy

package-front:
  stage: package
  script:
    - echo "Hello, i'm packaging your front-end"
    - cd ./webapp
    - apt install npm
    - npm install
    - npm install -g @angular/cli
    - npm run build

package-back:
  stage: package
  script:
    - export CURRENT_BUILD_PATH=$(pwd)
    - echo $PATH
    - rm -rf $HOME/golang
    - rm -rf $HOME/gopath
    - mkdir -p $HOME/golang # for GOROOT (contains the Go binary & core packages)
    - mkdir -p $HOME/gopath # for GOPATH (contains code and external packages)
    - curl http://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz 2>/dev/null > go1.5.2.linux-amd64.tar.gz
    - tar -C $HOME/golang -xzf go1.5.2.linux-amd64.tar.gz
    - export GOROOT=$HOME/golang/go
    - export GOPATH=$HOME/gopath
    - export PATH=$PATH:$GOROOT/bin
    - export PATH=$PATH:$GOPATH/bin
    - (if [[ "$(go version)" == *"go version go1.5"* ]]; then echo "âœ“ Go binary installed!"; else echo "Go binary not installed"; exit -1; fi);
    - go version
    - echo $PATH
    - go env
    - which go

build-front:
  stage: build
  script: 
    - cd webapp && ng serve

build-server: 
  stage: build
  script:
    - cd server && ng serve

lint-job:
  stage: lint
  script:
    - echo "Now, i'm linting your application"

test-job: 
  stage: test
  script: 
    - echo "Then, i'm testing your application"

deploy-job:
  stage: deploy
  script:
    - echo "To end, i'm deploying your application"
