stages:
  - lint
  - build
  - test
  - package
  - deploy

lint-front:
  stage: lint
  script:
    - echo "I'm linting your angular code" 
    - cd webapp
    - npm install eslint --save-dev
    - npx eslint "**/*.ts"
    
lint-back:
  stage: lint
  script:
    - echo "I'm linting your go code"
    - cd server
    - cd files
    - $Env:GOPATH = pwd
    - echo $env:GOPATH
    - go get -u golang.org/x/lint/golint
    - ls
    - ./bin/golint main.go
    - Remove-Item "pkg" -Recurse -Force

build-front:
  stage: build
  script:
    - echo "Hello, i'm building your front-end"
    - cd ./webapp
    - npm install
    - npm install @angular/cli -g
    - npm run build
    - Remove-Item "C:\inetpub\wwwroot\*" -Recurse
    - npm install http-server -g
    - Copy-Item -Path "dist\*" -Destination "C:\inetpub\wwwroot\" -Recurse

build-back:
  stage: build
  script:
    - echo "Hello, i'm building your back-end"
    - cd server\files
    - go build main.go
    - Get-ChildItem "C:\inetpub\wwwroot\main.exe"  -Recurse | Remove-Item
    - Copy-Item -Path "main.exe" -Destination "C:\inetpub\wwwroot\"

test-front:
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your front"
    - cd ./webapp
    - npm run test

test-back:
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your back"
    - cd server\files
    - go test

package-job:
  stage: package
  script:
    - echo "I'm packaging your code to the staging environment"
    - cd C:\inetpub\wwwroot\webapp\
    - http-server "C:\inetpub\wwwroot\webapp"
    - C:\inetpub\wwwroot\main.exe
  only:
    - master

deploy-job:
  stage: deploy
  script:
    - echo "I'm deploying your code to the production environment"
    - http-server "C:\inetpub\wwwroot\webapp"
    - C:\inetpub\wwwroot\main.exe
  only:
    - tags