stages:
  - lint
  - build
  - test
  - package
  - deploy

default:
  image: node:latest

.before_deploy: &before_deploy_shared
  before_script:
    - apt update
    - apt install git
    # Setup SSH deploy keys
    - which ssh-agent || ( apt install openssh-client )
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts


lint-front:
  stage: lint
  script:
    - echo "I'm linting your angular code"
    - cd webapp
    - npm install
    - npm install eslint --save-dev
    - npm i npx
    - npx eslint "**/*.ts"

lint-back:
  image: golang:1.10
  stage: lint
  script:
    - echo "I'm linting your go code"
    - cd server
    - export GOPATH=`pwd`
    - echo $GOPATH
    - go get -u golang.org/x/lint/golint
    - ./bin/golint files/main.go

build-front:
  stage: build
  script:
    - echo "Hello, i'm building your front-end"
    - cd ./webapp
    - npm install
    - npm install @angular/cli
    - npm run build --prod
  artifacts:
    paths:
      - /builds/CamillePolice/cicd-module/webapp/dist/

build-back:
  image: golang:1.10
  stage: build
  script:
    - echo "Hello, i'm building your back-end"
    - cd server/files
    - go build main.go
  artifacts:
    paths:
      - /builds/CamillePolice/cicd-module/server/files/main

test-front:
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your front"
    - cd ./webapp
    - npm install
    - npm install @angular/cli
    - npm run test

test-back:
  image: golang:1.10
  allow_failure: true
  stage: test
  script:
    - echo "I'm testing your back"
    - cd server/files
    - go test

package-job:
  <<: *before_deploy_shared
  stage: package
  script:
    - echo "I'm packaging your code to the staging environment"
    - scp /builds/CamillePolice/cicd-module/server/files/main tchiquizz@34.105.198.191:/www/staging
    - scp -r /builds/CamillePolice/cicd-module/webapp/dist/ tchiquizz@34.105.198.191/www/staging
    - ssh tchiquizz@34.105.198.191 "/www/server/main"
  only:
    - master

deploy-job:
  <<: *before_deploy_shared
  stage: deploy
  script:
    - echo "I'm deploying your code to the production environment"
    - scp /builds/CamillePolice/cicd-module/server/files/main tchiquizz@34.105.157.230/www/prod
    - scp -r /builds/CamillePolice/cicd-module/webapp/dist/ tchiquizz@34.105.157.230:/www/prod
    - ssh tchiquizz@34.105.157.230 "ls /www/server/main"
  tags:
    - tag
